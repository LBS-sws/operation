<?php

class AreaAuditForm extends CFormModel
{
    public $id;
    public $order_user;
    public $status;
    public $remark;
    public $luu;
    public $lcu;
    public $statusList;
    public $order_code;
    public $order_class;
    public $activity_id;
    public $goods_list;
    public $ject_remark;
    public $status_type;

    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub

        $this->status = "pending";
        $this->goods_list = array(
            array(
                "id"=>"",
                "goods_id"=>"",
                "classify_id"=>"",
                "stickies_id"=>"",
                "note"=>"",
                "name"=>"",
                "type"=>"",
                "unit"=>"",
                "price"=>"",
                "goods_num"=>"",
                "confirm_num"=>"",
                "remark"=>"",
            )
        );
    }

	public function attributeLabels()
	{
		return array(
            'order_code'=>Yii::t('procurement','Order Code'),
            'order_class'=>Yii::t('procurement','Order Class'),
            'activity_id'=>Yii::t('procurement','Order of Activity'),
            'goods_list'=>Yii::t('procurement','Goods List'),
            'order_user'=>Yii::t('procurement','Order User'),
            //'technician'=>Yii::t('procurement','Technician'),
            'status'=>Yii::t('procurement','Order Status'),
            'remark'=>Yii::t('procurement','Remark'),
            'ject_remark'=>Yii::t('procurement','reject remark'),
		);
	}

	/**
	 * Declares the validation rules.
	 */
	public function rules()
	{
		return array(
            array('id, order_code, order_user, order_class, activity_id, technician, status, remark, ject_remark, luu, lcu, lud, lcd','safe'),
            array('ject_remark','required','on'=>'reject'),
            array('id','validateTime'),
		);
	}

    public function validateTime($attribute, $params){
        $connection = Yii::app()->db;
        $rows = $connection->createCommand()->select("activity_id,order_code")->from("opr_order")
            ->where('id=:id', array(':id'=>$this->id))->queryRow();
        if($rows){
            $this->activity_id = $rows["activity_id"];
            $this->order_code = $rows["order_code"];
            if(!empty($this->activity_id)){
                $nowDate = date("Y-m-d");
                $list = $connection->createCommand()->select("activity_code,activity_title")->from("opr_order_activity")
                    ->where("id=:id and start_time<='$nowDate' and end_time>='$nowDate'", array(':id'=>$this->activity_id))->queryRow();
                if($list){
                    //允許審核
                }else{
                    //訂單過期
                    $this->orderExpired();
                    $message = Yii::t('procurement','The order has expired');
                    $this->addError($attribute,$message);
                }
            }else{
                //快速訂單不做驗證
            }
        }else{
            $message = Yii::t('dialog','No Record Found');
            $this->addError($attribute,$message);
        }
    }

    //訂單過期操作
    protected function orderExpired(){
        $connection = Yii::app()->db;
        $oldOrderStatus = $connection->createCommand()->select()->from("opr_order")
            ->where("id=:id",array(":id"=>$this->id))->queryRow();
        Yii::app()->db->createCommand()->update('opr_order', array(
            'status'=>'expired',
            'luu'=>Yii::app()->user->id,
        ), 'id=:id', array(':id'=>$this->id));
        Yii::app()->db->createCommand()->insert('opr_order_status', array(
            'order_id'=>$this->id,
            'status'=>'expired',
            'lcu'=>Yii::app()->user->user_display_name(),
            'time'=>date('Y-m-d H:i:s'),
        ));
        //發送郵件
        $html = "";
        $html .= "<p>下單用戶：".OrderGoods::getNameToUsername($oldOrderStatus["lcu"])."</p>";
        $html .= "<p>下單時間：".$oldOrderStatus["lcd"]."</p>";
        $html .= "<p>訂單編號：".$oldOrderStatus["order_code"]."</p>";
        OrderGoods::formEmail("營運系統：訂單已過期（訂單編號：".$oldOrderStatus["order_code"]."）",$html,$oldOrderStatus["lcu_email"]);
    }

    public function retrieveData($index) {
        $city = Yii::app()->user->city();
        $rows = Yii::app()->db->createCommand()->select("*")
            ->from("opr_order")->where("id=:id AND judge=1",array(":id"=>$index))->queryAll();
        if (count($rows) > 0) {
            foreach ($rows as $row) {
                $this->id = $row['id'];
                $this->order_code = $row['order_code'];
                $this->order_class = $row['order_class'];
                $this->activity_id = $row['activity_id'];
                $this->lcu = $row['lcu'];
                $this->goods_list = OrderForm::getGoodsListToId($row['id']);
                $this->order_user = $row['order_user'];
                //$this->technician = $row['technician'];
                $this->status = $row['status'];
                $this->ject_remark = $row['ject_remark'];
                $this->status_type = $row['status_type'];
                $this->remark = $row['remark'];
                $this->statusList = OrderForm::getStatusListToId($row['id']);
                break;
            }
        }
        return true;
    }
	public function saveData()
	{
		$connection = Yii::app()->db;
		$transaction=$connection->beginTransaction();
		try {
			$this->saveGoods($connection);
			$transaction->commit();
		}
		catch(Exception $e) {
			$transaction->rollback();
			throw new CHttpException(404,'Cannot update. ('.$e->getMessage().')');
		}
	}

    /*  id;employee_id;employee_code;employee_name;reward_id;reward_name;reward_money;reward_goods;remark;city;*/
	protected function saveGoods(&$connection) {
        $oldOrderStatus = Yii::app()->db->createCommand()->select()->from("opr_order")
            ->where("id=:id",array(":id"=>$this->id))->queryAll();
		$sql = '';
        switch ($this->scenario) {
            case 'audit':
                $oldOrderStatus[0]["status_type"] = 1;
                $this->status = "sent";
                $sql = "update opr_order set
							status_type = 1, 
							status = :status, 
							luu = :luu
						where id = :id
						";
                break;
            case 'reject':
                $this->status = "reject";
                $sql = "update opr_order set 
							status = :status, 
							ject_remark = :ject_remark, 
							luu = :luu
						where id = :id
						";
                break;
        }
		if (empty($sql)) return false;

        $city = Yii::app()->user->city();
        $uid = Yii::app()->user->id;

        $command=$connection->createCommand($sql);
        if (strpos($sql,':id')!==false)
            $command->bindParam(':id',$this->id,PDO::PARAM_INT);
        if (strpos($sql,':ject_remark')!==false)
            $command->bindParam(':ject_remark',$this->ject_remark,PDO::PARAM_STR);

        if (strpos($sql,':status')!==false)
            $command->bindParam(':status',$this->status,PDO::PARAM_INT);
        if (strpos($sql,':luu')!==false)
            $command->bindParam(':luu',$uid,PDO::PARAM_STR);
        $command->execute();

        Yii::app()->db->createCommand()->insert('opr_order_status', array(
            'order_id'=>$this->id,
            'status'=>$this->status == "sent"?"approve":$this->status,
            'r_remark'=>$this->remark,
            'lcu'=>Yii::app()->user->user_display_name(),
            'time'=>date('Y-m-d H:i:s'),
        ));

        //發送郵件
        $oldOrderStatus[0]["status"] = "aaa";
        OrderGoods::sendEmail($oldOrderStatus,$this->status,$this->order_code,$this->activity_id);
		return true;
	}
}
